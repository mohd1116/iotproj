{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport MapView, { Marker } from \"react-native-maps\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AddressPage = function AddressPage() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    markers = _useState2[0],\n    setMarkers = _useState2[1];\n  useEffect(function () {\n    var fetchPlaces = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var response = yield axios.get(\"https://maps.googleapis.com/maps/api/place/nearbysearch/json\", {\n            params: {\n              location: \"37.7749,-122.4194\",\n              radius: 1000,\n              type: \"restaurant\",\n              key: \"AIzaSyDEzFZ7S5HahRWdo8LcBugTHxbyGdWUmFU\"\n            }\n          });\n          if (response.data.status === \"OK\") {\n            setMarkers(response.data.results);\n          } else {\n            console.error(\"Error fetching places:\", response.data.error_message);\n          }\n        } catch (error) {\n          console.error(\"Error:\", error);\n        }\n      });\n      return function fetchPlaces() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchPlaces();\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(MapView, {\n      style: styles.map,\n      initialRegion: {\n        latitude: 37.7749,\n        longitude: -122.4194,\n        latitudeDelta: 0.0922,\n        longitudeDelta: 0.0421\n      },\n      children: markers.map(function (marker, index) {\n        return _jsx(Marker, {\n          coordinate: {\n            latitude: marker.geometry.location.lat,\n            longitude: marker.geometry.location.lng\n          },\n          title: marker.name\n        }, index);\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: _objectSpread({}, StyleSheet.absoluteFillObject),\n  map: _objectSpread({}, StyleSheet.absoluteFillObject)\n});\nexport default AddressPage;","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","View","MapView","Marker","axios","jsx","_jsx","AddressPage","_useState","_useState2","_slicedToArray","markers","setMarkers","fetchPlaces","_ref","_asyncToGenerator","response","get","params","location","radius","type","key","data","status","results","console","error","error_message","apply","arguments","style","styles","container","children","map","initialRegion","latitude","longitude","latitudeDelta","longitudeDelta","marker","index","coordinate","geometry","lat","lng","title","name","create","_objectSpread","absoluteFillObject"],"sources":["C:/Users/user/Desktop/iotproj/Screens/emergancyCall.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport MapView, { Marker } from \"react-native-maps\";\r\nimport axios from \"axios\";\r\n\r\nconst AddressPage = () => {\r\n  const [markers, setMarkers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://maps.googleapis.com/maps/api/place/nearbysearch/json\",\r\n          {\r\n            params: {\r\n              location: \"37.7749,-122.4194\", // San Francisco coordinates\r\n              radius: 1000,\r\n              type: \"restaurant\",\r\n              key: \"AIzaSyDEzFZ7S5HahRWdo8LcBugTHxbyGdWUmFU\", // Replace with your Google API key\r\n            },\r\n          }\r\n        );\r\n\r\n        if (response.data.status === \"OK\") {\r\n          setMarkers(response.data.results);\r\n        } else {\r\n          console.error(\"Error fetching places:\", response.data.error_message);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    };\r\n\r\n    fetchPlaces();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <MapView\r\n        style={styles.map}\r\n        initialRegion={{\r\n          latitude: 37.7749,\r\n          longitude: -122.4194,\r\n          latitudeDelta: 0.0922,\r\n          longitudeDelta: 0.0421,\r\n        }}\r\n      >\r\n        {markers.map((marker, index) => (\r\n          <Marker\r\n            key={index}\r\n            coordinate={{\r\n              latitude: marker.geometry.location.lat,\r\n              longitude: marker.geometry.location.lng,\r\n            }}\r\n            title={marker.name}\r\n          />\r\n        ))}\r\n      </MapView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    ...StyleSheet.absoluteFillObject,\r\n  },\r\n  map: {\r\n    ...StyleSheet.absoluteFillObject,\r\n  },\r\n});\r\n\r\nexport default AddressPage;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import {\r\n//   View,\r\n//   TextInput,\r\n//   Button,\r\n//   Linking,\r\n//   StyleSheet,\r\n//   Text,\r\n// } from \"react-native\";\r\n// import * as Location from \"expo-location\";\r\n\r\n// export default function AddressPage() {\r\n//   const [address, setAddress] = useState(\"\");\r\n//   const [location, setLocation] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     (async () => {\r\n//       let { status } = await Location.requestForegroundPermissionsAsync();\r\n//       if (status !== \"granted\") {\r\n//         console.error(\"Permission to access location was denied\");\r\n//         return;\r\n//       }\r\n//       let location = await Location.getCurrentPositionAsync({});\r\n//       setLocation(location);\r\n//       const response = await Location.reverseGeocodeAsync(location.coords);\r\n//       setAddress(`${response[0].city}, ${response[0].country}`); // Displaying city and country\r\n//     })();\r\n//   }, []);\r\n\r\n//   const handleCall = () => {\r\n//     const phoneNumber = \"+905526300460\"; // Replace with the actual phone number\r\n//     Linking.openURL(`tel:${phoneNumber}`);\r\n//   };\r\n\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <Text style={styles.title}>\r\n//         Your Location:{\" \"}\r\n//         {location\r\n//           ? `${location.coords.latitude}, ${location.coords.longitude}`\r\n//           : \"Fetching...\"}\r\n//       </Text>\r\n//       <Text style={styles.title}>Your Address: {address}</Text>\r\n//       <Button title=\"Call\" onPress={handleCall} />\r\n//     </View>\r\n//   );\r\n// }\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flexGrow: 1,\r\n//     justifyContent: \"center\",\r\n//     alignItems: \"center\",\r\n//     paddingHorizontal: 20,\r\n//     backgroundColor: \"rgb(32, 32, 36)\",\r\n//   },\r\n//   title: {\r\n//     fontSize: 20,\r\n//     color: \"turquoise\",\r\n//     marginBottom: 30,\r\n//     textAlign: \"center\",\r\n//   },\r\n// });\r\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAEnD,OAAOC,OAAO,IAAIC,MAAM,QAAQ,mBAAmB;AACnD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE1B,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EACxB,IAAAC,SAAA,GAA8BV,QAAQ,CAAC,EAAE,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAE1BV,SAAS,CAAC,YAAM;IACd,IAAMc,WAAW;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QAC9B,IAAI;UACF,IAAMC,QAAQ,SAASZ,KAAK,CAACa,GAAG,CAC9B,8DAA8D,EAC9D;YACEC,MAAM,EAAE;cACNC,QAAQ,EAAE,mBAAmB;cAC7BC,MAAM,EAAE,IAAI;cACZC,IAAI,EAAE,YAAY;cAClBC,GAAG,EAAE;YACP;UACF,CACF,CAAC;UAED,IAAIN,QAAQ,CAACO,IAAI,CAACC,MAAM,KAAK,IAAI,EAAE;YACjCZ,UAAU,CAACI,QAAQ,CAACO,IAAI,CAACE,OAAO,CAAC;UACnC,CAAC,MAAM;YACLC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEX,QAAQ,CAACO,IAAI,CAACK,aAAa,CAAC;UACtE;QACF,CAAC,CAAC,OAAOD,KAAK,EAAE;UACdD,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAChC;MACF,CAAC;MAAA,gBAtBKd,WAAWA,CAAA;QAAA,OAAAC,IAAA,CAAAe,KAAA,OAAAC,SAAA;MAAA;IAAA,GAsBhB;IAEDjB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,OACEP,IAAA,CAACL,IAAI;IAAC8B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5B5B,IAAA,CAACJ,OAAO;MACN6B,KAAK,EAAEC,MAAM,CAACG,GAAI;MAClBC,aAAa,EAAE;QACbC,QAAQ,EAAE,OAAO;QACjBC,SAAS,EAAE,CAAC,QAAQ;QACpBC,aAAa,EAAE,MAAM;QACrBC,cAAc,EAAE;MAClB,CAAE;MAAAN,QAAA,EAEDvB,OAAO,CAACwB,GAAG,CAAC,UAACM,MAAM,EAAEC,KAAK;QAAA,OACzBpC,IAAA,CAACH,MAAM;UAELwC,UAAU,EAAE;YACVN,QAAQ,EAAEI,MAAM,CAACG,QAAQ,CAACzB,QAAQ,CAAC0B,GAAG;YACtCP,SAAS,EAAEG,MAAM,CAACG,QAAQ,CAACzB,QAAQ,CAAC2B;UACtC,CAAE;UACFC,KAAK,EAAEN,MAAM,CAACO;QAAK,GALdN,KAMN,CAAC;MAAA,CACH;IAAC,CACK;EAAC,CACN,CAAC;AAEX,CAAC;AAED,IAAMV,MAAM,GAAGhC,UAAU,CAACiD,MAAM,CAAC;EAC/BhB,SAAS,EAAAiB,aAAA,KACJlD,UAAU,CAACmD,kBAAkB,CACjC;EACDhB,GAAG,EAAAe,aAAA,KACElD,UAAU,CAACmD,kBAAkB;AAEpC,CAAC,CAAC;AAEF,eAAe5C,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}