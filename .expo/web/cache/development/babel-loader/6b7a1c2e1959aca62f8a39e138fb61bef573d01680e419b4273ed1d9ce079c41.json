{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar mapContainerStyle = {\n  width: \"100%\",\n  height: \"400px\"\n};\nvar center = {\n  lat: 40.99069595336914,\n  lng: 28.797225952148438\n};\nexport default function Intro() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    locations = _useState2[0],\n    setLocations = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedLocation = _useState4[0],\n    setSelectedLocation = _useState4[1];\n  useEffect(function () {\n    var fetchLocations = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var result = yield axios.get(\"/api/locations\");\n        setLocations(result.data);\n      });\n      return function fetchLocations() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchLocations();\n  }, []);\n  var onMarkerClick = function onMarkerClick(location) {\n    setSelectedLocation(location);\n  };\n  var onCloseClick = function onCloseClick() {\n    setSelectedLocation(null);\n  };\n  return _jsx(LoadScript, {\n    googleMapsApiKey: \"YOUR_API_KEY_HERE\",\n    children: _jsxs(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      zoom: 14,\n      center: center,\n      children: [locations.map(function (location) {\n        return _jsx(Marker, {\n          position: {\n            lat: location.lat,\n            lng: location.lng\n          },\n          onClick: function onClick() {\n            return onMarkerClick(location);\n          }\n        }, location.id);\n      }), selectedLocation && _jsx(InfoWindow, {\n        position: {\n          lat: selectedLocation.lat,\n          lng: selectedLocation.lng\n        },\n        onCloseClick: onCloseClick,\n        children: _jsx(\"p\", {\n          children: selectedLocation.name\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","axios","GoogleMap","LoadScript","Marker","InfoWindow","jsx","_jsx","jsxs","_jsxs","mapContainerStyle","width","height","center","lat","lng","Intro","_useState","_useState2","_slicedToArray","locations","setLocations","_useState3","_useState4","selectedLocation","setSelectedLocation","fetchLocations","_ref","_asyncToGenerator","result","get","data","apply","arguments","onMarkerClick","location","onCloseClick","googleMapsApiKey","children","zoom","map","position","onClick","id","name"],"sources":["C:/Users/user/Desktop/iotproj/Screens/emergancyCall.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import {\r\n//   GoogleMap,\r\n//   LoadScript,\r\n//   Marker,\r\n//   InfoWindow,\r\n// } from \"@react-google-maps/api\";\r\n\r\n// const mapContainerStyle = {\r\n//   width: \"100%\",\r\n//   height: \"100vh\",\r\n// };\r\n\r\n// const center = {\r\n//   lat: 40.99069595336914,\r\n//   lng: 28.797225952148438,\r\n// };\r\n\r\n// export default function Intro() {\r\n//   const [open, setOpen] = useState(false);\r\n\r\n//   const onMarkerClick = () => {\r\n//     setOpen(true);\r\n//   };\r\n\r\n//   const onCloseClick = () => {\r\n//     setOpen(false);\r\n//   };\r\n\r\n//   return (\r\n//     <LoadScript googleMapsApiKey={\"AIzaSyCu1N7Bs0vFPm1_qBiE9VR2citXSrES6zs\"}>\r\n//       <GoogleMap\r\n//         mapContainerStyle={mapContainerStyle}\r\n//         zoom={14}\r\n//         center={center}\r\n//       >\r\n//         <Marker position={center} onClick={onMarkerClick} />\r\n\r\n//         {open && (\r\n//           <InfoWindow position={center} onCloseClick={onCloseClick}>\r\n//             <p>My location</p>\r\n//           </InfoWindow>\r\n//         )}\r\n//       </GoogleMap>\r\n//     </LoadScript>\r\n//   );\r\n// }\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  GoogleMap,\r\n  LoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n} from \"@react-google-maps/api\";\r\n\r\nconst mapContainerStyle = {\r\n  width: \"100%\",\r\n  height: \"400px\",\r\n};\r\n\r\nconst center = {\r\n  lat: 40.99069595336914,\r\n  lng: 28.797225952148438,\r\n};\r\n\r\nexport default function Intro() {\r\n  const [locations, setLocations] = useState([]);\r\n  const [selectedLocation, setSelectedLocation] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchLocations = async () => {\r\n      const result = await axios.get(\"/api/locations\");\r\n      setLocations(result.data);\r\n    };\r\n\r\n    fetchLocations();\r\n  }, []);\r\n\r\n  const onMarkerClick = (location) => {\r\n    setSelectedLocation(location);\r\n  };\r\n\r\n  const onCloseClick = () => {\r\n    setSelectedLocation(null);\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey={\"YOUR_API_KEY_HERE\"}>\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={14}\r\n        center={center}\r\n      >\r\n        {locations.map((location) => (\r\n          <Marker\r\n            key={location.id}\r\n            position={{ lat: location.lat, lng: location.lng }}\r\n            onClick={() => onMarkerClick(location)}\r\n          />\r\n        ))}\r\n\r\n        {selectedLocation && (\r\n          <InfoWindow\r\n            position={{ lat: selectedLocation.lat, lng: selectedLocation.lng }}\r\n            onCloseClick={onCloseClick}\r\n          >\r\n            <p>{selectedLocation.name}</p>\r\n          </InfoWindow>\r\n        )}\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n}\r\n"],"mappings":";;AA+CA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,SAAS,EACTC,UAAU,EACVC,MAAM,EACNC,UAAU,QACL,wBAAwB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEhC,IAAMC,iBAAiB,GAAG;EACxBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;AAED,IAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,iBAAiB;EACtBC,GAAG,EAAE;AACP,CAAC;AAED,eAAe,SAASC,KAAKA,CAAA,EAAG;EAC9B,IAAAC,SAAA,GAAkClB,QAAQ,CAAC,EAAE,CAAC;IAAAmB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAAI,UAAA,GAAgDvB,QAAQ,CAAC,IAAI,CAAC;IAAAwB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAvDE,gBAAgB,GAAAD,UAAA;IAAEE,mBAAmB,GAAAF,UAAA;EAE5CvB,SAAS,CAAC,YAAM;IACd,IAAM0B,cAAc;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QACjC,IAAMC,MAAM,SAAS5B,KAAK,CAAC6B,GAAG,CAAC,gBAAgB,CAAC;QAChDT,YAAY,CAACQ,MAAM,CAACE,IAAI,CAAC;MAC3B,CAAC;MAAA,gBAHKL,cAAcA,CAAA;QAAA,OAAAC,IAAA,CAAAK,KAAA,OAAAC,SAAA;MAAA;IAAA,GAGnB;IAEDP,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMQ,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,QAAQ,EAAK;IAClCV,mBAAmB,CAACU,QAAQ,CAAC;EAC/B,CAAC;EAED,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzBX,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,OACElB,IAAA,CAACJ,UAAU;IAACkC,gBAAgB,EAAE,mBAAoB;IAAAC,QAAA,EAChD7B,KAAA,CAACP,SAAS;MACRQ,iBAAiB,EAAEA,iBAAkB;MACrC6B,IAAI,EAAE,EAAG;MACT1B,MAAM,EAAEA,MAAO;MAAAyB,QAAA,GAEdlB,SAAS,CAACoB,GAAG,CAAC,UAACL,QAAQ;QAAA,OACtB5B,IAAA,CAACH,MAAM;UAELqC,QAAQ,EAAE;YAAE3B,GAAG,EAAEqB,QAAQ,CAACrB,GAAG;YAAEC,GAAG,EAAEoB,QAAQ,CAACpB;UAAI,CAAE;UACnD2B,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMR,aAAa,CAACC,QAAQ,CAAC;UAAA;QAAC,GAFlCA,QAAQ,CAACQ,EAGf,CAAC;MAAA,CACH,CAAC,EAEDnB,gBAAgB,IACfjB,IAAA,CAACF,UAAU;QACToC,QAAQ,EAAE;UAAE3B,GAAG,EAAEU,gBAAgB,CAACV,GAAG;UAAEC,GAAG,EAAES,gBAAgB,CAACT;QAAI,CAAE;QACnEqB,YAAY,EAAEA,YAAa;QAAAE,QAAA,EAE3B/B,IAAA;UAAA+B,QAAA,EAAId,gBAAgB,CAACoB;QAAI,CAAI;MAAC,CACpB,CACb;IAAA,CACQ;EAAC,CACF,CAAC;AAEjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}