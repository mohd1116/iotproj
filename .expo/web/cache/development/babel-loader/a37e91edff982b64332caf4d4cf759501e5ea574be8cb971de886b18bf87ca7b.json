{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as Location from \"expo-location\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function AddressPage() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    address = _useState2[0],\n    setAddress = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    location = _useState4[0],\n    setLocation = _useState4[1];\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n        status = _yield$Location$reque.status;\n      if (status !== \"granted\") {\n        console.error(\"Permission to access location was denied\");\n        return;\n      }\n      var location = yield Location.getCurrentPositionAsync({});\n      setLocation(location);\n      var response = yield Location.reverseGeocodeAsync(location.coords);\n      setAddress(`${response[0].city}, ${response[0].country}`);\n    })();\n  }, []);\n  var handleCall = function handleCall() {\n    var phoneNumber = \"+905526300460\";\n    Linking.openURL(`tel:${phoneNumber}`);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      style: styles.title,\n      children: [\"Your Location:\", \" \", location ? `${location.coords.latitude}, ${location.coords.longitude}` : \"Fetching...\"]\n    }), _jsxs(Text, {\n      style: styles.title,\n      children: [\"Your Address: \", address]\n    }), _jsx(Button, {\n      title: \"Call\",\n      onPress: handleCall\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingHorizontal: 20,\n    backgroundColor: \"rgb(32, 32, 36)\"\n  },\n  title: {\n    fontSize: 20,\n    color: \"turquoise\",\n    marginBottom: 30,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","TextInput","Button","Linking","StyleSheet","Text","Location","jsxs","_jsxs","jsx","_jsx","AddressPage","_useState","_useState2","_slicedToArray","address","setAddress","_useState3","_useState4","location","setLocation","_asyncToGenerator","_yield$Location$reque","requestForegroundPermissionsAsync","status","console","error","getCurrentPositionAsync","response","reverseGeocodeAsync","coords","city","country","handleCall","phoneNumber","openURL","style","styles","container","children","title","latitude","longitude","onPress","create","flexGrow","justifyContent","alignItems","paddingHorizontal","backgroundColor","fontSize","color","marginBottom","textAlign"],"sources":["C:/Users/user/Desktop/iotproj/Screens/emergancyCall.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { StyleSheet, View } from \"react-native\";\r\n// import MapView, { Marker } from \"react-native-maps\";\r\n// import axios from \"axios\";\r\n\r\n// const AddressPage = () => {\r\n//   const [markers, setMarkers] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchPlaces = async () => {\r\n//       try {\r\n//         const response = await axios.get(\r\n//           \"https://maps.googleapis.com/maps/api/place/nearbysearch/json\",\r\n//           {\r\n//             params: {\r\n//               location: \"37.7749,-122.4194\", // San Francisco coordinates\r\n//               radius: 1000,\r\n//               type: \"restaurant\",\r\n//               key: \"AIzaSyDEzFZ7S5HahRWdo8LcBugTHxbyGdWUmFU\", // Replace with your Google API key\r\n//             },\r\n//           }\r\n//         );\r\n\r\n//         if (response.data.status === \"OK\") {\r\n//           setMarkers(response.data.results);\r\n//         } else {\r\n//           console.error(\"Error fetching places:\", response.data.error_message);\r\n//         }\r\n//       } catch (error) {\r\n//         console.error(\"Error:\", error);\r\n//       }\r\n//     };\r\n\r\n//     fetchPlaces();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <MapView\r\n//         style={styles.map}\r\n//         initialRegion={{\r\n//           latitude: 37.7749,\r\n//           longitude: -122.4194,\r\n//           latitudeDelta: 0.0922,\r\n//           longitudeDelta: 0.0421,\r\n//         }}\r\n//       >\r\n//         {markers.map((marker, index) => (\r\n//           <Marker\r\n//             key={index}\r\n//             coordinate={{\r\n//               latitude: marker.geometry.location.lat,\r\n//               longitude: marker.geometry.location.lng,\r\n//             }}\r\n//             title={marker.name}\r\n//           />\r\n//         ))}\r\n//       </MapView>\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     ...StyleSheet.absoluteFillObject,\r\n//   },\r\n//   map: {\r\n//     ...StyleSheet.absoluteFillObject,\r\n//   },\r\n// });\r\n\r\n// export default AddressPage;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  TextInput,\r\n  Button,\r\n  Linking,\r\n  StyleSheet,\r\n  Text,\r\n} from \"react-native\";\r\nimport * as Location from \"expo-location\";\r\n\r\nexport default function AddressPage() {\r\n  const [address, setAddress] = useState(\"\");\r\n  const [location, setLocation] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      let { status } = await Location.requestForegroundPermissionsAsync();\r\n      if (status !== \"granted\") {\r\n        console.error(\"Permission to access location was denied\");\r\n        return;\r\n      }\r\n      let location = await Location.getCurrentPositionAsync({});\r\n      setLocation(location);\r\n      const response = await Location.reverseGeocodeAsync(location.coords);\r\n      setAddress(`${response[0].city}, ${response[0].country}`); // Displaying city and country\r\n    })();\r\n  }, []);\r\n\r\n  const handleCall = () => {\r\n    const phoneNumber = \"+905526300460\"; // Replace with the actual phone number\r\n    Linking.openURL(`tel:${phoneNumber}`);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>\r\n        Your Location:{\" \"}\r\n        {location\r\n          ? `${location.coords.latitude}, ${location.coords.longitude}`\r\n          : \"Fetching...\"}\r\n      </Text>\r\n      <Text style={styles.title}>Your Address: {address}</Text>\r\n      <Button title=\"Call\" onPress={handleCall} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexGrow: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 20,\r\n    backgroundColor: \"rgb(32, 32, 36)\",\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    color: \"turquoise\",\r\n    marginBottom: 30,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n"],"mappings":";;AAyEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,OAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AASnD,OAAO,KAAKC,QAAQ,MAAM,eAAe;AAAC,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAE1C,eAAe,SAASC,WAAWA,CAAA,EAAG;EACpC,IAAAC,SAAA,GAA8Bd,QAAQ,CAAC,EAAE,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAAgCnB,QAAQ,CAAC,IAAI,CAAC;IAAAoB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAvCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5BnB,SAAS,CAAC,YAAM;IACdsB,iBAAA,CAAC,aAAY;MACX,IAAAC,qBAAA,SAAuBhB,QAAQ,CAACiB,iCAAiC,CAAC,CAAC;QAA7DC,MAAM,GAAAF,qBAAA,CAANE,MAAM;MACZ,IAAIA,MAAM,KAAK,SAAS,EAAE;QACxBC,OAAO,CAACC,KAAK,CAAC,0CAA0C,CAAC;QACzD;MACF;MACA,IAAIP,QAAQ,SAASb,QAAQ,CAACqB,uBAAuB,CAAC,CAAC,CAAC,CAAC;MACzDP,WAAW,CAACD,QAAQ,CAAC;MACrB,IAAMS,QAAQ,SAAStB,QAAQ,CAACuB,mBAAmB,CAACV,QAAQ,CAACW,MAAM,CAAC;MACpEd,UAAU,CAAE,GAAEY,QAAQ,CAAC,CAAC,CAAC,CAACG,IAAK,KAAIH,QAAQ,CAAC,CAAC,CAAC,CAACI,OAAQ,EAAC,CAAC;IAC3D,CAAC,EAAE,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvB,IAAMC,WAAW,GAAG,eAAe;IACnC/B,OAAO,CAACgC,OAAO,CAAE,OAAMD,WAAY,EAAC,CAAC;EACvC,CAAC;EAED,OACE1B,KAAA,CAACR,IAAI;IAACoC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5B/B,KAAA,CAACH,IAAI;MAAC+B,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,GAAC,gBACX,EAAC,GAAG,EACjBpB,QAAQ,GACJ,GAAEA,QAAQ,CAACW,MAAM,CAACW,QAAS,KAAItB,QAAQ,CAACW,MAAM,CAACY,SAAU,EAAC,GAC3D,aAAa;IAAA,CACb,CAAC,EACPlC,KAAA,CAACH,IAAI;MAAC+B,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,GAAC,gBAAc,EAACxB,OAAO;IAAA,CAAO,CAAC,EACzDL,IAAA,CAACR,MAAM;MAACsC,KAAK,EAAC,MAAM;MAACG,OAAO,EAAEV;IAAW,CAAE,CAAC;EAAA,CACxC,CAAC;AAEX;AAEA,IAAMI,MAAM,GAAGjC,UAAU,CAACwC,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTO,QAAQ,EAAE,CAAC;IACXC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE;EACnB,CAAC;EACDT,KAAK,EAAE;IACLU,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,WAAW;IAClBC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACb;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}