{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport axios from \"axios\";\nimport CommonHeader from \"./Components/CommonHeader \";\nimport { useUser } from \"./Components/UserContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignUp = function SignUp(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    surname = _useState4[0],\n    setSurname = _useState4[1];\n  var _useUser = useUser(),\n    idCard = _useUser.idCard,\n    setIdCard = _useUser.setIdCard;\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    email = _useState6[0],\n    setEmail = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    password = _useState8[0],\n    setPassword = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    confirmPassword = _useState10[0],\n    setConfirmPassword = _useState10[1];\n  var handleSignUp = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!name || !surname || !idCard || !email || !password || !confirmPassword) {\n        alert(\"Please fill in all fields\");\n        return;\n      }\n      if (password !== confirmPassword) {\n        alert(\"Passwords do not match\");\n        return;\n      }\n      var serverUrl = \"http://192.168.1.156:3000/signup\";\n      try {\n        var response = yield axios.post(serverUrl, {\n          idCard: idCard,\n          name: name,\n          surname: surname,\n          email: email,\n          password: password,\n          confirmPass: confirmPassword\n        });\n        if (response.data.success) {\n          Alert.alert(\"Welcom to EmeCV\", \"Sign Up Successful!\");\n          navigation.navigate(\"FirstScreen\");\n        } else {\n          alert(response.data.error || \"Signup failed\");\n        }\n      } catch (error) {\n        if (axios.isAxiosError(error)) {\n          if (error.response) {\n            if (error.response.status === 409) {\n              alert(\"ID Card or Email already exists\");\n            } else {\n              alert(\"Signup failed: \" + error.response.status);\n            }\n          } else {\n            alert(\"Network error or server is down\");\n          }\n        } else {\n          console.error(\"Error handling sign up:\", error);\n          alert(\"An error occurred during sign up.\");\n        }\n      }\n    });\n    return function handleSignUp() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(ScrollView, {\n    contentContainerStyle: styles.contentContainer,\n    children: [_jsx(CommonHeader, {}), _jsx(Text, {\n      style: styles.title,\n      children: \"Sign Up\"\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"Name\",\n        style: styles.input,\n        placeholderTextColor: \"rgba(255, 255, 255, 0.7)\",\n        onChangeText: setName\n      }), _jsx(TextInput, {\n        placeholder: \"Surname\",\n        style: styles.input,\n        placeholderTextColor: \"rgba(255, 255, 255, 0.7)\",\n        onChangeText: setSurname\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"ID Number\",\n        placeholderTextColor: \"rgba(255, 255, 255, 0.7)\",\n        keyboardType: \"numeric\",\n        onChangeText: setIdCard\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Email\",\n        placeholderTextColor: \"rgba(255, 255, 255, 0.7)\",\n        onChangeText: setEmail\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        placeholderTextColor: \"rgba(255, 255, 255, 0.7)\",\n        onChangeText: setPassword\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Confirm Password\",\n        secureTextEntry: true,\n        placeholderTextColor: \"rgba(255, 255, 255, 0.7)\",\n        onChangeText: setConfirmPassword\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleSignUp,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Sign Up\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  contentContainer: {\n    flexGrow: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingHorizontal: 20,\n    backgroundColor: \"rgb(32, 32, 36)\"\n  },\n  title: {\n    fontSize: 40,\n    color: \"turquoise\",\n    marginBottom: 30,\n    textAlign: \"center\"\n  },\n  inputContainer: {\n    width: \"100%\",\n    marginBottom: 20\n  },\n  input: {\n    backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n    paddingHorizontal: 20,\n    paddingVertical: 15,\n    marginBottom: 10,\n    borderRadius: 8,\n    fontSize: 16,\n    color: \"white\"\n  },\n  button: {\n    backgroundColor: \"turquoise\",\n    borderRadius: 8,\n    paddingVertical: 15,\n    width: \"100%\",\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  buttonText: {\n    color: \"white\",\n    fontSize: 18,\n    fontWeight: \"bold\"\n  }\n});\nexport default SignUp;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","TextInput","TouchableOpacity","ScrollView","Alert","axios","CommonHeader","useUser","jsx","_jsx","jsxs","_jsxs","SignUp","_ref","navigation","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","surname","setSurname","_useUser","idCard","setIdCard","_useState5","_useState6","email","setEmail","_useState7","_useState8","password","setPassword","_useState9","_useState10","confirmPassword","setConfirmPassword","handleSignUp","_ref2","_asyncToGenerator","alert","serverUrl","response","post","confirmPass","data","success","navigate","error","isAxiosError","status","console","apply","arguments","contentContainerStyle","styles","contentContainer","children","style","title","inputContainer","placeholder","input","placeholderTextColor","onChangeText","keyboardType","secureTextEntry","button","onPress","buttonText","create","flexGrow","justifyContent","alignItems","paddingHorizontal","backgroundColor","fontSize","color","marginBottom","textAlign","width","paddingVertical","borderRadius","marginTop","fontWeight"],"sources":["C:/Users/user/Desktop/iotproj/Screens/SignUp.js"],"sourcesContent":["/* eslint-disable no-alert */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Alert,\r\n} from \"react-native\";\r\nimport axios from \"axios\";\r\nimport CommonHeader from \"./Components/CommonHeader \";\r\nimport { useUser } from \"./Components/UserContext\";\r\n\r\nconst SignUp = ({ navigation }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [surname, setSurname] = useState(\"\");\r\n  const { idCard, setIdCard } = useUser(); //to save it globaly\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const handleSignUp = async () => {\r\n    if (\r\n      !name ||\r\n      !surname ||\r\n      !idCard ||\r\n      !email ||\r\n      !password ||\r\n      !confirmPassword\r\n    ) {\r\n      alert(\"Please fill in all fields\");\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    const serverUrl = \"http://192.168.1.156:3000/signup\"; // Use your server URL here\r\n\r\n    try {\r\n      const response = await axios.post(serverUrl, {\r\n        idCard,\r\n        name,\r\n        surname,\r\n        email,\r\n        password,\r\n        confirmPass: confirmPassword,\r\n      });\r\n\r\n      if (response.data.success) {\r\n        Alert.alert(\"Welcom to EmeCV\", \"Sign Up Successful!\");\r\n        navigation.navigate(\"FirstScreen\"); // Make sure this navigation route is correctly named\r\n      } else {\r\n        alert(response.data.error || \"Signup failed\");\r\n      }\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        if (error.response) {\r\n          if (error.response.status === 409) {\r\n            alert(\"ID Card or Email already exists\");\r\n          } else {\r\n            alert(\"Signup failed: \" + error.response.status);\r\n          }\r\n        } else {\r\n          alert(\"Network error or server is down\");\r\n        }\r\n      } else {\r\n        console.error(\"Error handling sign up:\", error);\r\n        alert(\"An error occurred during sign up.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.contentContainer}>\r\n      <CommonHeader />\r\n      <Text style={styles.title}>Sign Up</Text>\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          placeholder=\"Name\"\r\n          style={styles.input}\r\n          placeholderTextColor=\"rgba(255, 255, 255, 0.7)\"\r\n          onChangeText={setName}\r\n        />\r\n        <TextInput\r\n          placeholder=\"Surname\"\r\n          style={styles.input}\r\n          placeholderTextColor=\"rgba(255, 255, 255, 0.7)\"\r\n          onChangeText={setSurname}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"ID Number\"\r\n          placeholderTextColor=\"rgba(255, 255, 255, 0.7)\"\r\n          keyboardType=\"numeric\"\r\n          onChangeText={setIdCard}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Email\"\r\n          placeholderTextColor=\"rgba(255, 255, 255, 0.7)\"\r\n          onChangeText={setEmail}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Password\"\r\n          secureTextEntry={true}\r\n          placeholderTextColor=\"rgba(255, 255, 255, 0.7)\"\r\n          onChangeText={setPassword}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Confirm Password\"\r\n          secureTextEntry={true}\r\n          placeholderTextColor=\"rgba(255, 255, 255, 0.7)\"\r\n          onChangeText={setConfirmPassword}\r\n        />\r\n      </View>\r\n      <TouchableOpacity style={styles.button} onPress={handleSignUp}>\r\n        <Text style={styles.buttonText}>Sign Up</Text>\r\n      </TouchableOpacity>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  contentContainer: {\r\n    flexGrow: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 20,\r\n    backgroundColor: \"rgb(32, 32, 36)\",\r\n  },\r\n  title: {\r\n    fontSize: 40,\r\n    color: \"turquoise\",\r\n    marginBottom: 30,\r\n    textAlign: \"center\",\r\n  },\r\n  inputContainer: {\r\n    width: \"100%\",\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    backgroundColor: \"rgba(255, 255, 255, 0.1)\",\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 15,\r\n    marginBottom: 10,\r\n    borderRadius: 8,\r\n    fontSize: 16,\r\n    color: \"white\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"turquoise\",\r\n    borderRadius: 8,\r\n    paddingVertical: 15,\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  buttonText: {\r\n    color: \"white\",\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nexport default SignUp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}