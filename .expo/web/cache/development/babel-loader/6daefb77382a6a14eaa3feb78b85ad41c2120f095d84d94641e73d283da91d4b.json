{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport axios from \"axios\";\nimport CommonHeader from \"./Components/CommonHeader \";\nimport { useUser } from \"./Components/UserContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n  var _useUser = useUser(),\n    idCard = _useUser.idCard,\n    setIdCard = _useUser.setIdCard;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var goToSignUp = function goToSignUp() {\n    navigation.navigate(\"SignUp\");\n  };\n  var navigateBasedOnProgress = function navigateBasedOnProgress(userProgress) {\n    if (!userProgress.firstScreenCompleted) {\n      navigation.navigate(\"FirstScreen\");\n    } else if (!userProgress.questionScreenCompleted) {\n      navigation.navigate(\"QuestionScreen\");\n    } else {\n      navigation.navigate(\"FormDataScreen\");\n    }\n  };\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!idCard || !password) {\n        alert(\"Please enter your email and password\");\n        return;\n      }\n      var serverUrl = \"http://192.168.1.156:3000/login\";\n      try {\n        var response = yield axios.post(serverUrl, {\n          idCard: idCard,\n          password: password\n        });\n        if (response.data.success) {\n          alert(\"Login Successful!\");\n          var userProgress = {\n            firstScreenCompleted: response.data.user.firstScreenCompleted,\n            questionScreenCompleted: response.data.user.questionScreenCompleted\n          };\n          navigateBasedOnProgress(userProgress);\n        } else {\n          alert(response.data.error || \"Login failed\");\n        }\n      } catch (error) {\n        if (axios.isAxiosError(error)) {\n          if (error.response) {\n            if (error.response.status === 401) {\n              alert(\"Invalid email or password\");\n            } else {\n              alert(\"Login failed: \" + error.response.status);\n            }\n          } else {\n            alert(\"Network error or server is down\");\n          }\n        } else {\n          console.error(\"Error handling login:\", error);\n          alert(\"An error occurred during login.\");\n        }\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(CommonHeader, {}), _jsx(Text, {\n      style: styles.title,\n      children: \"Login\"\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"ID Card\",\n        placeholderTextColor: \"rgba(255, 255, 255, 0.7)\",\n        onChangeText: function onChangeText(text) {\n          return setIdCard(text);\n        }\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        placeholderTextColor: \"rgba(255, 255, 255, 0.7)\",\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        }\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleLogin,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Login\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: goToSignUp,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"I don't have an account\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgb(32, 32, 36)\",\n    paddingHorizontal: 20\n  },\n  title: {\n    fontSize: 30,\n    color: \"turquoise\",\n    marginBottom: 20,\n    textAlign: \"center\"\n  },\n  inputContainer: {\n    width: \"100%\",\n    marginBottom: 20\n  },\n  input: {\n    backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n    paddingHorizontal: 20,\n    paddingVertical: 15,\n    marginBottom: 10,\n    borderRadius: 8,\n    fontSize: 16,\n    color: \"white\"\n  },\n  button: {\n    backgroundColor: \"turquoise\",\n    borderRadius: 8,\n    paddingVertical: 10,\n    width: \"100%\",\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  buttonText: {\n    color: \"white\",\n    fontSize: 18,\n    fontWeight: \"bold\"\n  }\n});\nexport default Login;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","TextInput","TouchableOpacity","axios","CommonHeader","useUser","jsx","_jsx","jsxs","_jsxs","Login","_ref","navigation","_useUser","idCard","setIdCard","_useState","_useState2","_slicedToArray","password","setPassword","goToSignUp","navigate","navigateBasedOnProgress","userProgress","firstScreenCompleted","questionScreenCompleted","handleLogin","_ref2","_asyncToGenerator","alert","serverUrl","response","post","data","success","user","error","isAxiosError","status","console","apply","arguments","style","styles","container","children","title","inputContainer","input","placeholder","placeholderTextColor","onChangeText","text","secureTextEntry","button","onPress","buttonText","create","flex","justifyContent","alignItems","backgroundColor","paddingHorizontal","fontSize","color","marginBottom","textAlign","width","paddingVertical","borderRadius","fontWeight"],"sources":["C:/Users/user/Desktop/iotproj/Screens/Login.js"],"sourcesContent":["/* eslint-disable no-alert */\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport axios from \"axios\";\r\nimport CommonHeader from \"./Components/CommonHeader \";\r\nimport { useUser } from \"./Components/UserContext\";\r\n\r\nconst Login = ({ navigation }) => {\r\n  const { idCard, setIdCard } = useUser();\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const goToSignUp = () => {\r\n    navigation.navigate(\"SignUp\"); // if there is no account\r\n  };\r\n\r\n  const navigateBasedOnProgress = (userProgress) => {\r\n    if (!userProgress.firstScreenCompleted) {\r\n      navigation.navigate(\"FirstScreen\");\r\n    } else if (!userProgress.questionScreenCompleted) {\r\n      navigation.navigate(\"QuestionScreen\");\r\n    } else {\r\n      navigation.navigate(\"FormDataScreen\");\r\n    }\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    if (!idCard || !password) {\r\n      alert(\"Please enter your email and password\");\r\n      return;\r\n    }\r\n\r\n    const serverUrl = \"http://192.168.1.156:3000/login\"; // Use your server URL here\r\n\r\n    try {\r\n      const response = await axios.post(serverUrl, {\r\n        idCard,\r\n        password,\r\n      });\r\n\r\n      if (response.data.success) {\r\n        alert(\"Login Successful!\");\r\n        // Navigate based on user role\r\n        // if (response.data.user.role === \"doctor\") {\r\n        //   navigation.navigate(\"VideoCallPage\"); // Replace with your video call screen route\r\n        // } else if (response.data.user.role === \"user\") {\r\n        //   navigation.navigate(\"FormDataScreen\"); // Replace with your user home screen route\r\n        // }\r\n        const userProgress = {\r\n          firstScreenCompleted: response.data.user.firstScreenCompleted,\r\n          questionScreenCompleted: response.data.user.questionScreenCompleted,\r\n        };\r\n\r\n        navigateBasedOnProgress(userProgress);\r\n      } else {\r\n        alert(response.data.error || \"Login failed\");\r\n      }\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        if (error.response) {\r\n          if (error.response.status === 401) {\r\n            alert(\"Invalid email or password\");\r\n          } else {\r\n            alert(\"Login failed: \" + error.response.status);\r\n          }\r\n        } else {\r\n          alert(\"Network error or server is down\");\r\n        }\r\n      } else {\r\n        console.error(\"Error handling login:\", error);\r\n        alert(\"An error occurred during login.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <CommonHeader />\r\n      <Text style={styles.title}>Login</Text>\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"ID Card\"\r\n          placeholderTextColor=\"rgba(255, 255, 255, 0.7)\"\r\n          onChangeText={(text) => setIdCard(text)}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Password\"\r\n          secureTextEntry={true}\r\n          placeholderTextColor=\"rgba(255, 255, 255, 0.7)\"\r\n          onChangeText={(text) => setPassword(text)}\r\n        />\r\n      </View>\r\n      <TouchableOpacity style={styles.button} onPress={handleLogin}>\r\n        <Text style={styles.buttonText}>Login</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style={styles.button} onPress={goToSignUp}>\r\n        <Text style={styles.buttonText}>I don't have an account</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"rgb(32, 32, 36)\",\r\n    paddingHorizontal: 20,\r\n  },\r\n  title: {\r\n    fontSize: 30,\r\n    color: \"turquoise\",\r\n    marginBottom: 20,\r\n    textAlign: \"center\",\r\n  },\r\n  inputContainer: {\r\n    width: \"100%\",\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    backgroundColor: \"rgba(255, 255, 255, 0.1)\",\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 15,\r\n    marginBottom: 10,\r\n    borderRadius: 8,\r\n    fontSize: 16,\r\n    color: \"white\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"turquoise\",\r\n    borderRadius: 8,\r\n    paddingVertical: 10, // Adjusted padding to make the button smaller\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    marginBottom: 10,\r\n  },\r\n  buttonText: {\r\n    color: \"white\",\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}